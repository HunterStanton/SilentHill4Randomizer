#include "stdafx.h"

#include "sh4/game/player/battle/player_weapon.h"

#include <plog/Log.h>

std::vector<WeaponTimeTableEntry> _gun = { {0.033, 0.1, 0.0, 0.433},
										  {0.033, 0.1, 0.0, 0.433},
										  {0.033, 0.1, 0.0, 0.433} };

std::vector<WeaponTimeTableEntry> _steelpipe = { {0.2, 0.367, 0.267, 0.8},
												{0.367, 0.9, 0.567, 1.133},
												{0.467, 1.0, 0.533, 2.366} };

std::vector<WeaponTimeTableEntry> _cutter = { {0.166, 0.366, 0.233, 1.0},
											 {0.166, 0.366, 0.233, 1.0},
											 {0.3, 0.733, 0.3, 1.2} };

std::vector<WeaponTimeTableEntry> _bottle_b = {
	{0.3, 0.733, 0.3, 1.5}, {0.3, 0.733, 0.3, 1.5}, {0.3, 0.733, 0.3, 1.5} };

std::vector<WeaponTimeTableEntry> _scoop = {
	{0.433, 0.833, 0.5, 0.0}, {0.433, 0.833, 0.5, 0.0}, {0.7, 1.4, 0.767, 0.0} };

std::vector<WeaponTimeTableEntry> _axe = { {0.166, 0.6, 0.267, 0.0},
										  {0.166, 0.6, 0.267, 0.0},
										  {1.5, 1.767, 1.567, 0.0} };

std::vector<WeaponTimeTableEntry> _pick = { {1.333, 1.667, 1.4, 3.8},
										   {1.333, 1.667, 1.4, 3.8},
										   {1.167, 2.6, 1.233, 4.1} };

std::vector<WeaponTimeTableEntry> _stun = {
	{0.6, 1.266, 0.6, 0.0}, {0.6, 1.266, 0.6, 0.0}, {0.6, 1.266, 0.6, 0.0} };

std::vector<WeaponTimeTableEntry> _spray = { {0.467, 2.2, 0.533, 2.5},
											{0.467, 2.2, 0.533, 2.5},
											{0.467, 2.2, 0.533, 2.5} };

std::vector<WeaponTimeTableEntry> _chain = { {0.367, 2.533, 0.833, 3.6},
											{0.767, 2.6, 0.866, 3.6},
											{0.8, 3.7, 1.033, 4.7} };

// table for how long each weapon takes to do things
std::vector<int> wp_time_table = {
	*(int*)&_gun,         *(int*)&_gun,       *(int*)&_steelpipe,
	*(int*)&_cutter,    *(int*)&_steelpipe, *(int*)&_steelpipe,
	*(int*)&_steelpipe, *(int*)&_steelpipe, *(int*)&_steelpipe,
	*(int*)&_steelpipe, *(int*)&_steelpipe, *(int*)&_steelpipe,
	*(int*)&_steelpipe, *(int*)&_steelpipe, *(int*)&_steelpipe,
	*(int*)&_steelpipe, *(int*)&_steelpipe, *(int*)&_steelpipe,
	*(int*)&_steelpipe, *(int*)&_steelpipe, *(int*)&_steelpipe,
	*(int*)&_steelpipe, *(int*)&_steelpipe, *(int*)&_steelpipe,
	*(int*)&_steelpipe, *(int*)&_steelpipe, *(int*)&_steelpipe,
	*(int*)&_steelpipe, *(int*)&_steelpipe, *(int*)&_cutter,
	*(int*)&_bottle_b,  *(int*)&_scoop,     *(int*)&_axe,
	*(int*)&_pick,      *(int*)&_stun,      *(int*)&_spray,
	*(int*)&_steelpipe, *(int*)&_chain,     *(int*)&_steelpipe,
	*(int*)&_steelpipe, *(int*)&_steelpipe, *(int*)&_steelpipe,
	*(int*)&_steelpipe, *(int*)&_steelpipe, *(int*)&_steelpipe,
	*(int*)&_steelpipe, *(int*)&_steelpipe, *(int*)&_steelpipe,
	*(int*)&_steelpipe, *(int*)&_steelpipe, *(int*)&_steelpipe,
	*(int*)&_steelpipe, *(int*)&_steelpipe, *(int*)&_steelpipe,
	*(int*)&_steelpipe, *(int*)&_steelpipe, *(int*)&_steelpipe,
	*(int*)&_steelpipe, *(int*)&_steelpipe, *(int*)&_steelpipe,
	*(int*)&_steelpipe, *(int*)&_steelpipe, *(int*)&_steelpipe,
	*(int*)&_steelpipe, *(int*)&_steelpipe, *(int*)&_steelpipe,
	*(int*)&_steelpipe, *(int*)&_steelpipe, *(int*)&_steelpipe,
	*(int*)&_steelpipe, *(int*)&_steelpipe, *(int*)&_steelpipe,
	*(int*)&_steelpipe, *(int*)&_steelpipe, *(int*)&_steelpipe,
	*(int*)&_steelpipe, *(int*)&_steelpipe, *(int*)&_steelpipe,
	*(int*)&_steelpipe, *(int*)&_steelpipe, *(int*)&_steelpipe,
	*(int*)&_steelpipe, *(int*)&_steelpipe, *(int*)&_steelpipe,
	*(int*)&_steelpipe, *(int*)&_steelpipe, *(int*)&_steelpipe,
	*(int*)&_steelpipe, *(int*)&_steelpipe, *(int*)&_steelpipe,
	*(int*)&_steelpipe, *(int*)&_steelpipe, *(int*)&_steelpipe,
	*(int*)&_steelpipe, *(int*)&_steelpipe, *(int*)&_steelpipe,
	*(int*)&_steelpipe, *(int*)&_steelpipe, *(int*)&_steelpipe,
	*(int*)&_steelpipe, *(int*)&_steelpipe, *(int*)&_steelpipe,
	*(int*)&_steelpipe, *(int*)&_steelpipe, *(int*)&_steelpipe,
	*(int*)&_steelpipe, *(int*)&_steelpipe, *(int*)&_steelpipe,
	*(int*)&_steelpipe, *(int*)&_steelpipe, *(int*)&_steelpipe,
	*(int*)&_steelpipe, *(int*)&_steelpipe, *(int*)&_steelpipe,
	*(int*)&_steelpipe, *(int*)&_steelpipe, *(int*)&_steelpipe,
	*(int*)&_steelpipe, *(int*)&_steelpipe, *(int*)&_steelpipe,
	*(int*)&_steelpipe, *(int*)&_steelpipe, *(int*)&_steelpipe,
	*(int*)&_steelpipe, *(int*)&_steelpipe, *(int*)&_steelpipe,
	*(int*)&_steelpipe, *(int*)&_steelpipe, *(int*)&_steelpipe,
	*(int*)&_steelpipe, *(int*)&_steelpipe, *(int*)&_steelpipe,
	*(int*)&_steelpipe, *(int*)&_steelpipe, *(int*)&_steelpipe,
	*(int*)&_steelpipe, *(int*)&_steelpipe, *(int*)&_steelpipe,
	*(int*)&_steelpipe, *(int*)&_steelpipe, *(int*)&_steelpipe,
	*(int*)&_steelpipe, *(int*)&_steelpipe, *(int*)&_steelpipe,
	*(int*)&_steelpipe, *(int*)&_steelpipe, *(int*)&_steelpipe,
	*(int*)&_steelpipe, *(int*)&_steelpipe, *(int*)&_steelpipe,
	*(int*)&_steelpipe, *(int*)&_steelpipe, *(int*)&_steelpipe,
	*(int*)&_steelpipe, *(int*)&_steelpipe, *(int*)&_steelpipe,
	*(int*)&_steelpipe, *(int*)&_steelpipe, *(int*)&_steelpipe,
	*(int*)&_steelpipe, *(int*)&_steelpipe, *(int*)&_steelpipe,
	*(int*)&_steelpipe, *(int*)&_steelpipe, *(int*)&_steelpipe,
	*(int*)&_steelpipe, *(int*)&_steelpipe, *(int*)&_steelpipe,
	*(int*)&_steelpipe, *(int*)&_steelpipe, *(int*)&_steelpipe,
	*(int*)&_steelpipe, *(int*)&_steelpipe, *(int*)&_steelpipe,
	*(int*)&_steelpipe, *(int*)&_steelpipe, *(int*)&_steelpipe,
	*(int*)&_steelpipe, *(int*)&_steelpipe, *(int*)&_steelpipe,
	*(int*)&_steelpipe, *(int*)&_steelpipe, *(int*)&_steelpipe,
	*(int*)&_steelpipe, *(int*)&_steelpipe, *(int*)&_steelpipe,
	*(int*)&_steelpipe, *(int*)&_steelpipe, *(int*)&_steelpipe,
	*(int*)&_steelpipe, *(int*)&_steelpipe, *(int*)&_steelpipe,
	*(int*)&_steelpipe, *(int*)&_steelpipe, *(int*)&_steelpipe,
	*(int*)&_steelpipe, *(int*)&_steelpipe, *(int*)&_steelpipe,
	*(int*)&_steelpipe, *(int*)&_steelpipe, *(int*)&_steelpipe,
	*(int*)&_steelpipe, *(int*)&_steelpipe, *(int*)&_steelpipe,
	*(int*)&_steelpipe, *(int*)&_steelpipe, *(int*)&_steelpipe,
	*(int*)&_steelpipe, *(int*)&_steelpipe, *(int*)&_steelpipe,
	*(int*)&_steelpipe, *(int*)&_steelpipe, *(int*)&_steelpipe,
	*(int*)&_steelpipe, *(int*)&_steelpipe, *(int*)&_steelpipe,
	*(int*)&_steelpipe, *(int*)&_spray,     *(int*)&_steelpipe,
	*(int*)&_steelpipe,
};

// the texture/models/shadow models to use for each weapon
std::vector<WeaponTableEntry> wp_table = {
	{0x0, 0xF00CF057, 0x0, 0xF05AF057, 0xF00DF057, 0x0},
	{0x0, 0xF042F057, 0x0, 0xF069F057, 0xF043F057, 0x0},
	{0x0, 0xF040F057, 0x0, 0xF068F057, 0xF041F057, 0x0},
	{0x0, 0xF00AF057, 0x0, 0xF059F057, 0xF00BF057, 0x0},
	{0x0, 0xF002F057, 0x0, 0xF055F057, 0xF003F057, 0x0},
	{0x0, 0xF00EF057, 0xF00FF057, 0xF05BF057, 0xF010F057, 0xF011F057},
	{0x0, 0xF00FF057, 0xF00FF057, 0xF05BF057, 0xF011F057, 0xF011F057},
	{0x0, 0xF012F057, 0xF013F057, 0xF05CF057, 0xF014F057, 0xF015F057},
	{0x0, 0xF013F057, 0xF013F057, 0xF05CF057, 0xF015F057, 0xF015F057},
	{0x0, 0xF016F057, 0xF017F057, 0xF05DF057, 0xF018F057, 0xF019F057},
	{0x0, 0xF017F057, 0xF017F057, 0xF05DF057, 0xF019F057, 0xF019F057},
	{0x0, 0xF01AF057, 0xF01BF057, 0xF05EF057, 0xF01CF057, 0xF01DF057},
	{0x0, 0xF01BF057, 0xF01BF057, 0xF05EF057, 0xF01DF057, 0xF01DF057},
	{0x0, 0xF01EF057, 0xF01FF057, 0xF05FF057, 0xF020F057, 0xF021F057},
	{0x0, 0xF01FF057, 0xF01FF057, 0xF05FF057, 0xF021F057, 0xF021F057},
	{0x0, 0xF022F057, 0xF023F057, 0xF060F057, 0xF024F057, 0xF025F057},
	{0x0, 0xF023F057, 0xF023F057, 0xF060F057, 0xF025F057, 0xF025F057},
	{0x0, 0xF026F057, 0xF027F057, 0xF061F057, 0xF028F057, 0xF029F057},
	{0x0, 0xF027F057, 0xF027F057, 0xF061F057, 0xF029F057, 0xF029F057},
	{0x0, 0xF02AF057, 0xF02BF057, 0xF062F057, 0xF02CF057, 0xF02DF057},
	{0x0, 0xF02BF057, 0xF02BF057, 0xF062F057, 0xF02DF057, 0xF02DF057},
	{0x0, 0xF02EF057, 0xF02FF057, 0xF063F057, 0xF030F057, 0xF031F057},
	{0x0, 0xF02FF057, 0xF02FF057, 0xF063F057, 0xF031F057, 0xF031F057},
	{0x0, 0xF032F057, 0xF033F057, 0xF064F057, 0xF034F057, 0xF035F057},
	{0x0, 0xF033F057, 0xF033F057, 0xF064F057, 0xF035F057, 0xF035F057},
	{0x0, 0xF036F057, 0xF037F057, 0xF065F057, 0xF038F057, 0xF039F057},
	{0x0, 0xF037F057, 0xF037F057, 0xF065F057, 0xF039F057, 0xF039F057},
	{0x0, 0xF03AF057, 0xF03BF057, 0xF066F057, 0xF03CF057, 0xF03DF057},
	{0x0, 0xF03BF057, 0xF03BF057, 0xF066F057, 0xF03DF057, 0xF03DF057},
	{0x0, 0xF004F057, 0x0, 0xF056F057, 0xF006F057, 0x0},
	{0x0, 0xF005F057, 0xF005F057, 0xF057F057, 0xF007F057, 0xF007F057},
	{0x0, 0xF044F057, 0x0, 0xF06AF057, 0xF045F057, 0x0},
	{0x0, 0xF000F057, 0x0, 0xF054F057, 0xF001F057, 0x0},
	{0x0, 0xF03EF057, 0x0, 0xF067F057, 0xF03FF057, 0x0},
	{0x0, 0xF048F057, 0xF048F057, 0xF06CF057, 0xF049F057, 0xF049F057},
	{0x0, 0xF046F057, 0xF046F057, 0xF06BF057, 0xF047F057, 0xF047F057},
	{0x0, 0xF04AF057, 0x0, 0xF06DF057, 0xF04BF057, 0x0},
	{0x0, 0xF008F057, 0x0, 0xF058F057, 0xF009F057, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	{0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
	// hyper spray
	{0x0, 0xF046F057, 0xF046F057, 0xF075F057, 0xF047F057, 0xF047F057},
	// gold pipe
	{0x0, 0xF073F057, 0x0, 0xF074F057, 0xF041F057, 0x0},
	// silver pipe
	{0x0, 0xF073F057, 0x0, 0xF076F057, 0xF041F057, 0x0},
};

// weapon params such as charge time and etc.
std::vector<WeaponParam> wp_param = {
	{0.0f, 0x6, 0x4, 0x6, 0x4, 1},
	{0.0f, 0x6, 0x4, 0x6, 0x4, 1},
	{1.75f, 0x6, 0x2, 0x5, 0x2, 1},
	{0.42f, 0x6, 0x2, 0x6, 0x2, 1},
	{4.0f, 0x6, 0x2, 0x5, 0x2, 0.8},
	{2.8f, 0x6, 0x2, 0x5, 0x2, 0.88},
	{0.0f, 0x6, 0x2, 0x5, 0x2, 1},
	{2.6f, 0x6, 0x2, 0x5, 0x2, 0.9},
	{0.0f, 0x6, 0x2, 0x5, 0x2, 1},
	{2.45f, 0x6, 0x2, 0x5, 0x2, 0.92},
	{0.0f, 0x6, 0x2, 0x5, 0x2, 1},
	{2.3f, 0x6, 0x2, 0x5, 0x2, 0.94},
	{0.0f, 0x6, 0x2, 0x5, 0x2, 1},
	{2.15f, 0x6, 0x2, 0x5, 0x2, 0.96},
	{0.0f, 0x6, 0x2, 0x5, 0x2, 1},
	{2.0f, 0x6, 0x2, 0x5, 0x2, 0.98},
	{0.0f, 0x6, 0x2, 0x5, 0x2, 1},
	{1.85f, 0x6, 0x2, 0x5, 0x2, 1},
	{0.0f, 0x6, 0x2, 0x5, 0x2, 1},
	{1.7f, 0x6, 0x2, 0x5, 0x2, 1.02},
	{0.0f, 0x6, 0x2, 0x5, 0x2, 1},
	{1.55f, 0x6, 0x2, 0x5, 0x2, 1.04},
	{0.0f, 0x6, 0x2, 0x5, 0x2, 1},
	{1.4f, 0x6, 0x2, 0x5, 0x2, 1.06},
	{0.0f, 0x6, 0x2, 0x5, 0x2, 1},
	{1.25f, 0x6, 0x2, 0x5, 0x2, 1.08},
	{0.0f, 0x6, 0x2, 0x5, 0x2, 1},
	{1.1f, 0x6, 0x2, 0x5, 0x2, 1.1},
	{0, 0x6, 0x2, 0x5, 0x2, 1},
	{0, 0x6, 0x2, 0x6, 0x2, 0.95},
	{0, 0x6, 0x2, 0x6, 0x2, 0.8},
	{2.4f, 0x5, 0x2, 0x5, 0x2, 1},
	{3.0f, 0x6, 0x2, 0x6, 0x2, 1},
	{6, 0x5, 0x2, 0x5, 0x2, 1},
	{0, 0x6, 0x2, 0x6, 0x2, 1},
	{0, 0x6, 0x2, 0x6, 0x2, 1},
	{0, 0x6, 0x2, 0x5, 0x2, 0.9},
	{3.5f, 0x5, 0x3, 0x5, 0x3, 1},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0.0, 0, 0, 0, 0, 0.0},
	{0, 0x6, 0x2, 0x6, 0x2, 1},
	// hyperspray
	{0.0f, 0x6, 0x2, 0x6, 0x2, 1},
	// gold pipe
	{1.25f, 0x6, 0x2, 0x5, 0x2, 1},
	// silver pipe
	{1.5f, 0x6, 0x2, 0x5, 0x2, 1},
};

// the two battle attacks for each weapon (light + strong/charged)
extern std::vector<AttackTableEntry> attack_tbl = {
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_PLAYER_HAND_GUN, BAK_PLAYER_HAND_GUN},
	{BAK_PLAYER_REVOLVER, BAK_PLAYER_REVOLVER},
	{BAK_PLAYER_PIPE, BAK_PLAYER_PIPE_ST},
	{BAK_PLAYER_CUTTER, BAK_PLAYER_CUTTER_ST},
	{BAK_PLAYER_BAT, BAK_PLAYER_BAT_ST},
	{BAK_PLAYER_DRIVER, BAK_PLAYER_DRIVER_ST},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_PLAYER_SPOON, BAK_PLAYER_SPOON_ST},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_PLAYER_MID_MASHY, BAK_PLAYER_MID_MASHY_ST},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_PLAYER_MASHY_IRON, BAK_PLAYER_MASHY_IRON_ST},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_PLAYER_MASHY, BAK_PLAYER_MASHY_ST},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_PLAYER_SPADE_MASHY, BAK_PLAYER_SPADE_MASHY_ST},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_PLAYER_MASHY_NIBLICK, BAK_PLAYER_MASHY_NIBLICK_ST},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_PLAYER_PITCHER, BAK_PLAYER_PITCHER_ST},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_PLAYER_NIBLICK, BAK_PLAYER_NIBLICK_ST},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_PLAYER_PITCHING_WEDGE, BAK_PLAYER_PITCHING_WEDGE_ST},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_PLAYER_SAND_WEDGE, BAK_PLAYER_SAND_WEDGE_ST},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_PLAYER_PUTTER, BAK_PLAYER_PUTTER_ST},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_PLAYER_BOTTLE, BAK_PLAYER_BOTTLE},
	{BAK_PLAYER_BROKEN_BOTTLE, BAK_PLAYER_BROKEN_BOTTLE},
	{BAK_PLAYER_SCOOP, BAK_PLAYER_SCOOP_ST},
	{BAK_PLAYER_HATCHET, BAK_PLAYER_HATCHET_ST},
	{BAK_PLAYER_PICK, BAK_PLAYER_PICK_ST},
	{BAK_PLAYER_STUNGUN, BAK_PLAYER_STUNGUN},
	{BAK_PLAYER_SPRAY, BAK_PLAYER_SPRAY},
	{BAK_PLAYER_WOOD_STICK, BAK_PLAYER_WOOD_STICK},
	{BAK_PLAYER_CHAINSAW, BAK_PLAYER_CHAINSAW_ST},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	{BAK_NOTHING, BAK_NOTHING},
	// hyper spray
	{BAK_PLAYER_PICK, BAK_PLAYER_PICK_ST},
	// gold pipe
	{BAK_PLAYER_PIPE, BAK_PLAYER_PIPE_ST},
	// silver pipe
	{BAK_PLAYER_PIPE, BAK_PLAYER_PIPE_ST},
};

// which sidestep animations to use for left/right sidestep
std::vector<SidestepAnimEntry> sidestep_anim = {
	{0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},
	{0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},
	{0, 0},   {0, 0},
	// vanilla weapons
	{17, 18}, {17, 18}, {15, 16}, {25, 26}, {15, 16},
	{15, 16}, {15, 16}, {15, 16}, {15, 16}, {15, 16}, {15, 16}, {15, 16},
	{15, 16}, {15, 16}, {15, 16}, {15, 16}, {15, 16}, {15, 16}, {15, 16},
	{15, 16}, {15, 16}, {15, 16}, {15, 16}, {15, 16}, {15, 16}, {15, 16},
	{15, 16}, {15, 16}, {15, 16}, {25, 26}, {25, 26}, {21, 22}, {25, 26},
	{19, 20}, {25, 26}, {25, 26}, {15, 16}, {23, 24},
	// non-weapon items
	{0, 0},   {0, 0},
	{0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},
	{0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},
	{0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},
	{0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},
	{0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},
	{0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},
	{0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},
	{0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},
	{0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},
	{0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},
	{0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},
	{0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},
	{0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},
	{0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},
	{0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},
	{0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},
	{0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},
	{0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},
	{0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},
	{0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},
	{0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},
	{0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},
	{0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},
	{0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},
	{0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},   {0, 0},
	{0, 0},   {0, 0},
	// hyper spray
	{25, 26},
	// gold pipe
	{15, 16},
	// silver pipe
	{15, 16},
};

injector::hook_back<float(__cdecl*)(int, int)> PlayerWeaponGetStartTime;
injector::hook_back<float(__cdecl*)(int, int)> PlayerWeaponGetEndTime;

void InitializePlayerWeaponFunctions() {
	PlayerWeaponGetStartTime.fun = injector::auto_pointer(0x005439e0);
	PlayerWeaponGetEndTime.fun = injector::auto_pointer(0x00543a10);
}